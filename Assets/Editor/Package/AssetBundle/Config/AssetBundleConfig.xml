<?xml version="1.0" encoding="UTF-8"?>
<!--
searchDirectory：搜索目录，相对于Resources目录
	packingType:
		Whole		所有目标文件打在一起
		SubDir		子目录中的所有目标文件打在一起//加载的时候注意，需要传入名称进去
		SingleFile	所有文件目标文件各自单独打包
    Lua     lua文件打包（路径做特殊处理）,lua的后缀打包时会处理成bytes，所以不能用lua
	assetBundleName:
		{DirPath}		目录的路径
		{DirName}		目录的名称
		{SubDirPath}	子目录的路径
		{SubDirName}	子目录的名称
		{FilePath}		文件路径(不包含后缀)
		其它的自定义的	直接做为assetBundleName
	onlyMoveFile:
		移动文件，不打包成asset bundle
	onlyTopDir:
		只查询顶层目录，不查询子目录
	ignoreDirNames:
		排除的目录名
  assetFilters:
    只有匹配的资源才会被选中，如果没配置，那么当前所有文件都是符合要求的
-->
 
<AssetBundle>
  <Build searchDirectory="" packingType="" includeFiles="*.*"/>
  <!--动态UI动画-->
  <PackingGroup groupName="animSpine">
    <Asset searchDirectory="AnimSpine">
      <Build packingType="SubDir" assetFilters=".txt,.json,.png,.asset,.mat,.jpg"/>
    </Asset>
  </PackingGroup>
  <!--图集，ngui图集需要注意的是，当UIFont或是UIAtlas与使用它们的Prefab不在一个Bundle里时，加载Prefab就会出现scripit misssing，所以，其中的prefab让其依赖打包到各个prefab中-->
  <PackingGroup groupName="atlas">
    <Asset searchDirectory="Atlas">
      <Build packingType="SubDir" assetFilters=".mat,.png"/>
    </Asset>
  </PackingGroup>
  <!--子弹（碰撞点）-->
  <PackingGroup groupName="bullet">
    <Asset searchDirectory="Bullet">
      <Build packingType="SingleFile" assetFilters=".prefab"/>
    </Asset>
  </PackingGroup>
  <!--特效-->
  <PackingGroup groupName="effect">
    <Asset searchDirectory="Effect">
      <Build packingType="SingleFile" assetFilters=".prefab,.fbx,.anim,.controller,.psd,.png,.jpg,.dds,.tga,.json,.txt,.asset,.mat"/>
    </Asset>
  </PackingGroup>
  <!--鱼-->
  <PackingGroup groupName="fish">
    <Asset searchDirectory="Fish">
      <Build packingType="SingleFile" assetFilters=".prefab,.fbx,.anim,.controller,.psd,.png,.jpg,.dds,.tga,.json,.txt,.asset,.mat"/>
    </Asset>
  </PackingGroup>
  <!--字体-->
  <PackingGroup groupName="font">
    <Asset searchDirectory="Font">
      <Build packingType="Whole" assetFilters=".ttf"/>
    </Asset>
  </PackingGroup>
  <!--炮-->
  <PackingGroup groupName="gun">
    <Asset searchDirectory="Gun/Pre">
      <Build packingType="SingleFile" assetFilters=".prefab,.fbx,.anim,.controller,.psd,.png,.jpg,.dds,.tga,.json,.txt,.asset,.mat"/>
    </Asset>
  </PackingGroup>

  <!--岛屿-->
  <PackingGroup groupName="island">
    <Asset searchDirectory="Island">
      <Build packingType="SingleFile" assetFilters=".prefab,.fbx,.anim,.controller,.psd,.png,.jpg,.dds,.tga,.json,.txt,.asset,.mat,.exr"/>
    </Asset>
  </PackingGroup>

   <!--模型-->
  <PackingGroup groupName="model">
    <Asset searchDirectory="Model/Pre">
      <Build packingType="SingleFile" assetFilters=".prefab,.fbx,.anim,.controller,.psd,.png,.jpg,.dds,.tga,.json,.txt,.asset,.mat"/>
    </Asset>
  </PackingGroup>

  <!--场景-->
  <PackingGroup groupName="scene">
    <Asset searchDirectory="Scene">
      <Build packingType="SingleFile" assetFilters=".prefab,.fbx,.anim,.controller,.psd,.png,.jpg,.dds,.tga,.json,.txt,.asset,.mat,.unity" ignoreDirNames="Pre/Scene_3001001"/>
    </Asset>
  </PackingGroup>

  <!--声音-->
  <PackingGroup groupName="sound">
    <Asset searchDirectory="Sound">
      <Build packingType="SingleFile" assetFilters=".mp3,.wav,.ogg" />
    </Asset>
  </PackingGroup>

  <!--动态贴图-->
  <PackingGroup groupName="texture">
    <Asset searchDirectory="Texture">
      <Build packingType="SingleFile" assetFilters=".jpg,.png" onlyMoveFile="true"/>
    </Asset>
  </PackingGroup>

  <!--UI面板-->
  <PackingGroup groupName="view">
    <Asset searchDirectory="View">
      <Build packingType="SingleFile" assetFilters=".prefab"/>
    </Asset>
  </PackingGroup>

  <!--Shader-->
  <PackingGroup groupName="Shaders">
    <Asset searchDirectory="Shader">
      <Build packingType="Whole" assetFilters=".shader,.cginc"/>
    </Asset>
  </PackingGroup>
  
  <!--资源模板-->
  <PackingGroup groupName="templates">
    <Asset searchDirectory="Template">
      <Build packingType="Whole" assetFilters=".prefab,.fbx,.anim,.controller,.psd,.png,.jpg,.dds,.tga,.json,.txt,.asset,.mat"/>
    </Asset>
  </PackingGroup>
  <!--代码-->
  <PackingGroup groupName="lua">
    <Asset searchDirectory="../Lua">
      <Build packingType="Lua" assetFilters=".bytes"/>
    </Asset>
    <!--tolua代码-->
    <Asset searchDirectory="../ToLua/Lua">
      <Build packingType="Lua" assetFilters=".bytes"/>
    </Asset>
  </PackingGroup>
</AssetBundle>